knn_mae
lm_mae <- (mean(abs(lmtest_y - lmtest_pred)))
lm_mae
View(lmtest_pred)
summary(linreg)
knn_mae
summary(knn_mae)
t.test(lmtest_y,lmtest_pred)
t.test(test_y - knnmodel$pred)
#two sample test
t.test(lmtest_y,lmtest_pred)
t.test(test_y - knnmodel$pred)
qqplot(lmtest_y,lmtest_pred) #linear regression
qqplot(test_y - knnmodel$pred) #knn
plot(test_y, knnmodel$pred , xlab="y", ylab='y_predict')
qqplot(test_y - knnmodel$pred) #knn
qqplot(test_y - knnmodel$pred) #knn
t.test(test_y - knnmodel$pred) #knn
library(readxl)
library(dplyr)
library(lattice)
library(ggplot2)
library(FNN)
manhattan_df <- read_excel('rollingsales_manhattan.xls',skip = 4)
View(manhattan_df)
#data cleaning
colnames(manhattan_df)[names(manhattan_df) == "SALE\nPRICE" ] <- "SALE PRICE"
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' != 0 )
manhattan_df <- filter(manhattan_df,manhattan_df$'YEAR BUILT' != 0 )
#Create the Building Age feature to indicate the age of the building at its year sold
manhattan_df$'SALE YEAR' <- as.numeric(format(manhattan_df$'SALE DATE',format = '%Y'))
manhattan_df$'BUILDING AGE' <- manhattan_df$'SALE YEAR' - manhattan_df$'YEAR BUILT'
#Initial observation
names(manhattan_df)
hist(manhattan_df$'YEAR BUILT')
hist(manhattan_df$'BUILDING AGE')
hist(manhattan_df$'SALE PRICE')
hist(manhattan_df$'LAND SQUARE FEET')
hist(manhattan_df$'GROSS SQUARE FEET')
hist(manhattan_df$'COMMERCIAL UNITS')
hist(manhattan_df$'RESIDENTIAL UNITS')
fivenum(manhattan_df$'SALE PRICE')
boxplot(manhattan_df$'SALE PRICE')
fivenum(manhattan_df$'LAND SQUARE FEET')
boxplot(manhattan_df$'LAND SQUARE FEET')
#drop all the outliers and zeros
upper_limit = (fivenum(manhattan_df$'SALE PRICE')[4] - fivenum(manhattan_df$'SALE PRICE')[2])*1.5 + fivenum(manhattan_df$'SALE PRICE')[4]
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' <= upper_limit)
manhattan_df <- filter(manhattan_df,manhattan_df$'LAND SQUARE FEET' != 0)
#1:3 Train test Split
set.seed(5)
smp_size <- floor(0.75 * nrow(manhattan_df))
train_ind <- sample(seq_len(nrow(manhattan_df)), size = smp_size)
train <- manhattan_df[train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
test <- manhattan_df[-train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
#Standardization
#We need to scale the testing data based on the mean and std of the training data to test our models generalizability
test$'SALE PRICE' <-  ((test$'SALE PRICE') - mean(train$'SALE PRICE'))/mean(train$'SALE PRICE')
test$'LAND SQUARE FEET' <-  ((test$'LAND SQUARE FEET') - mean(train$'LAND SQUARE FEET'))/mean(train$'LAND SQUARE FEET')
test$'BUILDING AGE' <- ((test$'BUILDING AGE') - mean(train$'BUILDING AGE'))/mean(train$'BUILDING AGE')
test$'RESIDENTIAL UNITS' <-  ((test$'RESIDENTIAL UNITS') - mean(train$'RESIDENTIAL UNITS'))/mean(train$'RESIDENTIAL UNITS')
test$'COMMERCIAL UNITS' <- ((test$'COMMERCIAL UNITS') - mean(train$'COMMERCIAL UNITS'))/mean(train$'COMMERCIAL UNITS')
train$'SALE PRICE' <-  scale(train$'SALE PRICE')
train$'LAND SQUARE FEET' <-  scale(train$'LAND SQUARE FEET')
train$'BUILDING AGE' <- scale(train$'BUILDING AGE')
train$'LAND SQUARE FEET' <-  scale(train$'LAND SQUARE FEET')
train$'COMMERCIAL UNITS' <- scale(train$'COMMERCIAL UNITS')
train$'RESIDENTIAL UNITS' <- scale(train$'RESIDENTIAL UNITS')
train_x <- train[,c('LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
train_y <- train[['SALE PRICE']]
test_x <- test[,c('LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
test_y <- test[['SALE PRICE']]
#knn
knnmodel <- knn.reg(train = train_x, y = train_y, test = test_x, k = 51)
plot(test_y, knnmodel$pred , xlab="y", ylab='y_predict')
knn_mae <- mean(abs(test_y - knnmodel$pred))
knn_mae
#Linear Regression
lmtrain <- manhattan_df[train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
lmtest <- manhattan_df[-train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
lmtrain_x <- log(lmtrain[,c('LAND SQUARE FEET')])
lmtrain_x <- mutate(lmtrain_x,manhattan_df[train_ind, c('RESIDENTIAL UNITS', 'COMMERCIAL UNITS','BUILDING AGE')])
lmtrain_y <- log(lmtrain[['SALE PRICE']])
lmtest_x <- log(lmtest[,c('LAND SQUARE FEET')])
lmtest_x <- mutate(lmtest_x,manhattan_df[-train_ind, c('RESIDENTIAL UNITS', 'COMMERCIAL UNITS','BUILDING AGE')])
lmtest_y <- log(lmtest[['SALE PRICE']])
lmtrain <- mutate(lmtrain_x,lmtrain_y)
lmtest <- mutate(lmtest_x,lmtest_y)
colnames(lmtrain) <- c( 'LAND_SQUARE_FEET','RESIDENTIAL_UNITS', 'COMMERCIAL_UNITS','BUILDING_AGE','SALE_PRICE')
colnames(lmtest) <- c( 'LAND_SQUARE_FEET','RESIDENTIAL_UNITS', 'COMMERCIAL_UNITS','BUILDING_AGE','SALE_PRICE')
linreg<-lm(SALE_PRICE ~ 0 + LAND_SQUARE_FEET + RESIDENTIAL_UNITS + COMMERCIAL_UNITS + BUILDING_AGE, data = lmtrain)
summary(linreg)
lmtest_pred <- predict(linreg,newdata =lmtest)
lm_mae <- (mean(abs(lmtest_y - lmtest_pred)))
lm_mae
View(lmtest_pred).
#two sample test
t.test(lmtest_y,lmtest_pred) #linear regression
t.test(test_y - knnmodel$pred) #knn
qqplot(lmtest_y,lmtest_pred) #linear regression
qqplot(test_y - knnmodel$pred) #knn
t.test(test_y, knnmodel$pred) #knn
qqplot(test_y, knnmodel$pred) #knn
qqplot(lmtest_y,lmtest_pred) #linear regression
library(readxl)
library(dplyr)
library(lattice)
library(ggplot2)
library(FNN)
manhattan_df <- read_excel('rollingsales_manhattan.xls',skip = 4)
View(manhattan_df)
#data cleaning
colnames(manhattan_df)[names(manhattan_df) == "SALE\nPRICE" ] <- "SALE PRICE"
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' != 0 )
manhattan_df <- filter(manhattan_df,manhattan_df$'YEAR BUILT' != 0 )
#Create the Building Age feature to indicate the age of the building at its year sold
manhattan_df$'SALE YEAR' <- as.numeric(format(manhattan_df$'SALE DATE',format = '%Y'))
manhattan_df$'BUILDING AGE' <- manhattan_df$'SALE YEAR' - manhattan_df$'YEAR BUILT'
#Initial observation
names(manhattan_df)
hist(manhattan_df$'YEAR BUILT')
hist(manhattan_df$'BUILDING AGE')
hist(manhattan_df$'SALE PRICE')
hist(manhattan_df$'LAND SQUARE FEET')
hist(manhattan_df$'GROSS SQUARE FEET')
hist(manhattan_df$'COMMERCIAL UNITS')
hist(manhattan_df$'RESIDENTIAL UNITS')
fivenum(manhattan_df$'SALE PRICE')
boxplot(manhattan_df$'SALE PRICE')
fivenum(manhattan_df$'LAND SQUARE FEET')
boxplot(manhattan_df$'LAND SQUARE FEET')
#drop all the outliers and zeros
upper_limit = (fivenum(manhattan_df$'SALE PRICE')[4] - fivenum(manhattan_df$'SALE PRICE')[2])*1.5 + fivenum(manhattan_df$'SALE PRICE')[4]
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' <= upper_limit)
manhattan_df <- filter(manhattan_df,manhattan_df$'LAND SQUARE FEET' != 0)
#1:3 Train test Split
set.seed(5)
smp_size <- floor(0.75 * nrow(manhattan_df))
train_ind <- sample(seq_len(nrow(manhattan_df)), size = smp_size)
train <- manhattan_df[train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
test <- manhattan_df[-train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
#Standardization
#We need to scale the testing data based on the mean and std of the training data to test our models generalizability
test$'SALE PRICE' <-  ((test$'SALE PRICE') - mean(train$'SALE PRICE'))/mean(train$'SALE PRICE')
test$'LAND SQUARE FEET' <-  ((test$'LAND SQUARE FEET') - mean(train$'LAND SQUARE FEET'))/mean(train$'LAND SQUARE FEET')
test$'BUILDING AGE' <- ((test$'BUILDING AGE') - mean(train$'BUILDING AGE'))/mean(train$'BUILDING AGE')
test$'RESIDENTIAL UNITS' <-  ((test$'RESIDENTIAL UNITS') - mean(train$'RESIDENTIAL UNITS'))/mean(train$'RESIDENTIAL UNITS')
test$'COMMERCIAL UNITS' <- ((test$'COMMERCIAL UNITS') - mean(train$'COMMERCIAL UNITS'))/mean(train$'COMMERCIAL UNITS')
train$'SALE PRICE' <-  scale(train$'SALE PRICE')
train$'LAND SQUARE FEET' <-  scale(train$'LAND SQUARE FEET')
train$'BUILDING AGE' <- scale(train$'BUILDING AGE')
train$'LAND SQUARE FEET' <-  scale(train$'LAND SQUARE FEET')
train$'COMMERCIAL UNITS' <- scale(train$'COMMERCIAL UNITS')
train$'RESIDENTIAL UNITS' <- scale(train$'RESIDENTIAL UNITS')
train_x <- train[,c('LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
train_y <- train[['SALE PRICE']]
test_x <- test[,c('LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
test_y <- test[['SALE PRICE']]
#knn
knnmodel <- knn.reg(train = train_x, y = train_y, test = test_x, k = 51)
plot(test_y, knnmodel$pred , xlab="y", ylab='y_predict')
knn_mae <- mean(abs(test_y - knnmodel$pred))
knn_mae
#Linear Regression
lmtrain <- manhattan_df[train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
lmtest <- manhattan_df[-train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
lmtrain_x <- log(lmtrain[,c('LAND SQUARE FEET')])
lmtrain_x <- mutate(lmtrain_x,manhattan_df[train_ind, c('RESIDENTIAL UNITS', 'COMMERCIAL UNITS','BUILDING AGE')])
lmtrain_y <- log(lmtrain[['SALE PRICE']])
lmtest_x <- log(lmtest[,c('LAND SQUARE FEET')])
lmtest_x <- mutate(lmtest_x,manhattan_df[-train_ind, c('RESIDENTIAL UNITS', 'COMMERCIAL UNITS','BUILDING AGE')])
lmtest_y <- log(lmtest[['SALE PRICE']])
lmtrain <- mutate(lmtrain_x,lmtrain_y)
lmtest <- mutate(lmtest_x,lmtest_y)
colnames(lmtrain) <- c( 'LAND_SQUARE_FEET','RESIDENTIAL_UNITS', 'COMMERCIAL_UNITS','BUILDING_AGE','SALE_PRICE')
colnames(lmtest) <- c( 'LAND_SQUARE_FEET','RESIDENTIAL_UNITS', 'COMMERCIAL_UNITS','BUILDING_AGE','SALE_PRICE')
linreg<-lm(SALE_PRICE ~ 0 + LAND_SQUARE_FEET + RESIDENTIAL_UNITS + COMMERCIAL_UNITS + BUILDING_AGE, data = lmtrain)
summary(linreg)
lmtest_pred <- predict(linreg,newdata =lmtest)
lm_mae <- (mean(abs(lmtest_y - lmtest_pred)))
lm_mae
View(lmtest_pred)
#two sample test
t.test(lmtest_y,lmtest_pred) #linear regression
t.test(test_y, knnmodel$pred) #knn
qqplot(lmtest_y,lmtest_pred) #linear regression
qqplot(test_y, knnmodel$pred) #knn
library(readxl)
library(dplyr)
library(lattice)
library(ggplot2)
library(FNN)
manhattan_df <- read_excel('rollingsales_manhattan.xls',skip = 4)
View(manhattan_df)
#data cleaning
colnames(manhattan_df)[names(manhattan_df) == "SALE\nPRICE" ] <- "SALE PRICE"
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' != 0 )
manhattan_df <- filter(manhattan_df,manhattan_df$'YEAR BUILT' != 0 )
#Create the Building Age feature to indicate the age of the building at its year sold
manhattan_df$'SALE YEAR' <- as.numeric(format(manhattan_df$'SALE DATE',format = '%Y'))
manhattan_df$'BUILDING AGE' <- manhattan_df$'SALE YEAR' - manhattan_df$'YEAR BUILT'
#Initial observation
names(manhattan_df)
hist(manhattan_df$'YEAR BUILT')
hist(manhattan_df$'BUILDING AGE')
hist(manhattan_df$'SALE PRICE')
hist(manhattan_df$'LAND SQUARE FEET')
hist(manhattan_df$'GROSS SQUARE FEET')
hist(manhattan_df$'COMMERCIAL UNITS')
hist(manhattan_df$'RESIDENTIAL UNITS')
fivenum(manhattan_df$'SALE PRICE')
boxplot(manhattan_df$'SALE PRICE')
fivenum(manhattan_df$'LAND SQUARE FEET')
boxplot(manhattan_df$'LAND SQUARE FEET')
boxplot(manhattan_df$'SALE PRICE')
#drop all the outliers and zeros
upper_limit = (fivenum(manhattan_df$'SALE PRICE')[4] - fivenum(manhattan_df$'SALE PRICE')[2])*1.5 + fivenum(manhattan_df$'SALE PRICE')[4]
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' <= upper_limit)
hist(manhattan_df$'SALE PRICE')
boxplot(manhattan_df$'SALE PRICE')
hist(manhattan_df$'LAND SQUARE FEET')
manhattan_df <- filter(manhattan_df,manhattan_df$'LAND SQUARE FEET' != 0)
hist(manhattan_df$'LAND SQUARE FEET')
manhattan_df <- read_excel('rollingsales_manhattan.xls',skip = 4)
View(manhattan_df)
#data cleaning
colnames(manhattan_df)[names(manhattan_df) == "SALE\nPRICE" ] <- "SALE PRICE"
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' != 0 )
manhattan_df <- filter(manhattan_df,manhattan_df$'YEAR BUILT' != 0 )
#Create the Building Age feature to indicate the age of the building at its year sold
manhattan_df$'SALE YEAR' <- as.numeric(format(manhattan_df$'SALE DATE',format = '%Y'))
manhattan_df$'BUILDING AGE' <- manhattan_df$'SALE YEAR' - manhattan_df$'YEAR BUILT'
boxplot(manhattan_df$'LAND SQUARE FEET')
hist(manhattan_df$'BUILDING AGE')
hist(manhattan_df$'COMMERCIAL UNITS')
boxplot(manhattan_df$'COMMERCIAL UNITS')
boxplot(manhattan_df$'RESIDENTIAL UNITS')
hist(manhattan_df$'RESIDENTIAL UNITS')
manhattan_df <- filter(manhattan_df,manhattan_df$'COMMERCIAL UNITS' <= (fivenum(manhattan_df$'COMMERCIAL UNITS')[4] - fivenum(manhattan_df$'COMMERCIAL UNITS')[2])*1.5 + fivenum(manhattan_df$'COMMERCIAL UNITS')[4])
manhattan_df <- filter(manhattan_df,manhattan_df$'RESIDENTIAL UNITS' <= (fivenum(manhattan_df$'RESIDENTIAL UNITS')[4] - fivenum(manhattan_df$'RESIDENTIAL UNITS')[2])*1.5 + fivenum(manhattan_df$'RESIDENTIAL UNITS')[4])
hist(manhattan_df$'COMMERCIAL UNITS')
boxplot(manhattan_df$'COMMERCIAL UNITS')
boxplot(manhattan_df$'RESIDENTIAL UNITS')
hist(manhattan_df$'RESIDENTIAL UNITS')
hist(manhattan_df$'COMMERCIAL UNITS')
hist(manhattan_df$'RESIDENTIAL UNITS')
boxplot(manhattan_df$'COMMERCIAL UNITS')
boxplot(manhattan_df$'RESIDENTIAL UNITS')
manhattan_df <- filter(manhattan_df,manhattan_df$'LAND SQUARE FEET' != 0)
fivenum(manhattan_df$'LAND SQUARE FEET')
boxplot(manhattan_df$'LAND SQUARE FEET')
library(readxl)
library(dplyr)
library(lattice)
library(ggplot2)
library(FNN)
manhattan_df <- read_excel('rollingsales_manhattan.xls',skip = 4)
View(manhattan_df)
#data cleaning
colnames(manhattan_df)[names(manhattan_df) == "SALE\nPRICE" ] <- "SALE PRICE"
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' != 0 )
manhattan_df <- filter(manhattan_df,manhattan_df$'YEAR BUILT' != 0 )
#Create the Building Age feature to indicate the age of the building at its year sold
manhattan_df$'SALE YEAR' <- as.numeric(format(manhattan_df$'SALE DATE',format = '%Y'))
manhattan_df$'BUILDING AGE' <- manhattan_df$'SALE YEAR' - manhattan_df$'YEAR BUILT'
#Initial observation
names(manhattan_df)
hist(manhattan_df$'YEAR BUILT')
hist(manhattan_df$'BUILDING AGE')
hist(manhattan_df$'SALE PRICE')
hist(manhattan_df$'LAND SQUARE FEET')
hist(manhattan_df$'GROSS SQUARE FEET')
hist(manhattan_df$'COMMERCIAL UNITS')
hist(manhattan_df$'RESIDENTIAL UNITS')
boxplot(manhattan_df$'COMMERCIAL UNITS')
boxplot(manhattan_df$'RESIDENTIAL UNITS')
fivenum(manhattan_df$'SALE PRICE')
boxplot(manhattan_df$'SALE PRICE')
fivenum(manhattan_df$'LAND SQUARE FEET')
boxplot(manhattan_df$'LAND SQUARE FEET')
#drop all the outliers and zeros
upper_limit = (fivenum(manhattan_df$'SALE PRICE')[4] - fivenum(manhattan_df$'SALE PRICE')[2])*1.5 + fivenum(manhattan_df$'SALE PRICE')[4]
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' <= upper_limit)
manhattan_df <- filter(manhattan_df,manhattan_df$'LAND SQUARE FEET' != 0)
library(readxl)
library(dplyr)
library(lattice)
library(ggplot2)
library(FNN)
manhattan_df <- read_excel('rollingsales_manhattan.xls',skip = 4)
View(manhattan_df)
#data cleaning
colnames(manhattan_df)[names(manhattan_df) == "SALE\nPRICE" ] <- "SALE PRICE"
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' != 0 )
manhattan_df <- filter(manhattan_df,manhattan_df$'YEAR BUILT' != 0 )
#Create the Building Age feature to indicate the age of the building at its year sold
manhattan_df$'SALE YEAR' <- as.numeric(format(manhattan_df$'SALE DATE',format = '%Y'))
manhattan_df$'BUILDING AGE' <- manhattan_df$'SALE YEAR' - manhattan_df$'YEAR BUILT'
#Initial observation
names(manhattan_df)
hist(manhattan_df$'YEAR BUILT')
hist(manhattan_df$'BUILDING AGE')
hist(manhattan_df$'SALE PRICE')
hist(manhattan_df$'LAND SQUARE FEET')
hist(manhattan_df$'GROSS SQUARE FEET')
hist(manhattan_df$'COMMERCIAL UNITS')
hist(manhattan_df$'RESIDENTIAL UNITS')
boxplot(manhattan_df$'COMMERCIAL UNITS')
boxplot(manhattan_df$'RESIDENTIAL UNITS')
fivenum(manhattan_df$'SALE PRICE')
boxplot(manhattan_df$'SALE PRICE')
fivenum(manhattan_df$'LAND SQUARE FEET')
boxplot(manhattan_df$'LAND SQUARE FEET')
#drop all the outliers and zeros
upper_limit = (fivenum(manhattan_df$'SALE PRICE')[4] - fivenum(manhattan_df$'SALE PRICE')[2])*1.5 + fivenum(manhattan_df$'SALE PRICE')[4]
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' <= upper_limit)
manhattan_df <- filter(manhattan_df,manhattan_df$'LAND SQUARE FEET' != 0)
hist(manhattan_df$'LAND SQUARE FEET')
boxplot(manhattan_df$'LAND SQUARE FEET')
hist(manhattan_df$'BUILDING AGE')
boxplot(manhattan_df$'BUILDING AGE')
manhattan_df <- read_excel('rollingsales_manhattan.xls',skip = 4)
View(manhattan_df)
#data cleaning
colnames(manhattan_df)[names(manhattan_df) == "SALE\nPRICE" ] <- "SALE PRICE"
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' != 0 )
manhattan_df <- filter(manhattan_df,manhattan_df$'YEAR BUILT' != 0 )
#Create the Building Age feature to indicate the age of the building at its year sold
manhattan_df$'SALE YEAR' <- as.numeric(format(manhattan_df$'SALE DATE',format = '%Y'))
manhattan_df$'BUILDING AGE' <- manhattan_df$'SALE YEAR' - manhattan_df$'YEAR BUILT'
#Initial observation
names(manhattan_df)
hist(manhattan_df$'YEAR BUILT')
hist(manhattan_df$'BUILDING AGE')
hist(manhattan_df$'SALE PRICE')
hist(manhattan_df$'LAND SQUARE FEET')
hist(manhattan_df$'GROSS SQUARE FEET')
hist(manhattan_df$'COMMERCIAL UNITS')
hist(manhattan_df$'RESIDENTIAL UNITS')
boxplot(manhattan_df$'COMMERCIAL UNITS')
boxplot(manhattan_df$'RESIDENTIAL UNITS')
fivenum(manhattan_df$'SALE PRICE')
boxplot(manhattan_df$'BUILDING AGE')
fivenum(manhattan_df$'LAND SQUARE FEET')
boxplot(manhattan_df$'LAND SQUARE FEET')
#drop all the outliers and zeros
upper_limit = (fivenum(manhattan_df$'SALE PRICE')[4] - fivenum(manhattan_df$'SALE PRICE')[2])*1.5 + fivenum(manhattan_df$'SALE PRICE')[4]
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' <= upper_limit)
manhattan_df <- filter(manhattan_df,manhattan_df$'LAND SQUARE FEET' != 0)
#manhattan_df <- filter(manhattan_df,manhattan_df$'COMMERCIAL UNITS' <= (fivenum(manhattan_df$'COMMERCIAL UNITS')[4] - fivenum(manhattan_df$'COMMERCIAL UNITS')[2])*1.5 + fivenum(manhattan_df$'COMMERCIAL UNITS')[4])
#manhattan_df <- filter(manhattan_df,manhattan_df$'RESIDENTIAL UNITS' <= (fivenum(manhattan_df$'RESIDENTIAL UNITS')[4] - fivenum(manhattan_df$'RESIDENTIAL UNITS')[2])*1.5 + fivenum(manhattan_df$'RESIDENTIAL UNITS')[4])
#1:3 Train test Split
set.seed(5)
smp_size <- floor(0.75 * nrow(manhattan_df))
train_ind <- sample(seq_len(nrow(manhattan_df)), size = smp_size)
train <- manhattan_df[train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
test <- manhattan_df[-train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
#Standardization
#We need to scale the testing data based on the mean and std of the training data to test our models generalizability
test$'SALE PRICE' <-  ((test$'SALE PRICE') - mean(train$'SALE PRICE'))/mean(train$'SALE PRICE')
test$'LAND SQUARE FEET' <-  ((test$'LAND SQUARE FEET') - mean(train$'LAND SQUARE FEET'))/mean(train$'LAND SQUARE FEET')
test$'BUILDING AGE' <- ((test$'BUILDING AGE') - mean(train$'BUILDING AGE'))/mean(train$'BUILDING AGE')
test$'RESIDENTIAL UNITS' <-  ((test$'RESIDENTIAL UNITS') - mean(train$'RESIDENTIAL UNITS'))/mean(train$'RESIDENTIAL UNITS')
test$'COMMERCIAL UNITS' <- ((test$'COMMERCIAL UNITS') - mean(train$'COMMERCIAL UNITS'))/mean(train$'COMMERCIAL UNITS')
train$'SALE PRICE' <-  scale(train$'SALE PRICE')
train$'LAND SQUARE FEET' <-  scale(train$'LAND SQUARE FEET')
train$'BUILDING AGE' <- scale(train$'BUILDING AGE')
train$'LAND SQUARE FEET' <-  scale(train$'LAND SQUARE FEET')
train$'COMMERCIAL UNITS' <- scale(train$'COMMERCIAL UNITS')
train$'RESIDENTIAL UNITS' <- scale(train$'RESIDENTIAL UNITS')
train_x <- train[,c('LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
train_y <- train[['SALE PRICE']]
test_x <- test[,c('LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
test_y <- test[['SALE PRICE']]
#knn
knnmodel <- knn.reg(train = train_x, y = train_y, test = test_x, k = 51)
plot(test_y, knnmodel$pred , xlab="y", ylab='y_predict')
knn_mae <- mean(abs(test_y - knnmodel$pred))
knn_mae
#Linear Regression
lmtrain <- manhattan_df[train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
lmtest <- manhattan_df[-train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
lmtrain_x <- log(lmtrain[,c('LAND SQUARE FEET')])
lmtrain_x <- mutate(lmtrain_x,manhattan_df[train_ind, c('RESIDENTIAL UNITS', 'COMMERCIAL UNITS','BUILDING AGE')])
lmtrain_y <- log(lmtrain[['SALE PRICE']])
lmtest_x <- log(lmtest[,c('LAND SQUARE FEET')])
lmtest_x <- mutate(lmtest_x,manhattan_df[-train_ind, c('RESIDENTIAL UNITS', 'COMMERCIAL UNITS','BUILDING AGE')])
lmtest_y <- log(lmtest[['SALE PRICE']])
lmtrain <- mutate(lmtrain_x,lmtrain_y)
lmtest <- mutate(lmtest_x,lmtest_y)
colnames(lmtrain) <- c( 'LAND_SQUARE_FEET','RESIDENTIAL_UNITS', 'COMMERCIAL_UNITS','BUILDING_AGE','SALE_PRICE')
colnames(lmtest) <- c( 'LAND_SQUARE_FEET','RESIDENTIAL_UNITS', 'COMMERCIAL_UNITS','BUILDING_AGE','SALE_PRICE')
linreg<-lm(SALE_PRICE ~ 0 + LAND_SQUARE_FEET + RESIDENTIAL_UNITS + COMMERCIAL_UNITS + BUILDING_AGE, data = lmtrain)
summary(linreg)
lmtest_pred <- predict(linreg,newdata =lmtest)
lm_mae <- (mean(abs(lmtest_y - lmtest_pred)))
lm_mae
View(lmtest_pred)
#two sample test
t.test(lmtest_y,lmtest_pred) #linear regression
t.test(test_y, knnmodel$pred) #knn
qqplot(lmtest_y,lmtest_pred) #linear regression
qqplot(test_y, knnmodel$pred) #knn
summary(linreg)
#knn
knnmodel <- knn.reg(train = train_x, y = train_y, test = test_x, k = 51)
plot(test_y, knnmodel$pred , xlab="y", ylab='y_predict')
knn_mae <- mean(abs(test_y - knnmodel$pred))
knn_mae
#knn
knnmodel <- knn.reg(train = train_x, y = train_y, test = test_x, k = 51)
plot(test_y, knnmodel$pred , xlab="y", ylab='y_predict')
qqplot(test_y, knnmodel$pred) #knn
lm_mae
mean(lmtest_y$'SALE_PRICE')
lmtest_y
mean(test_y)
mean(test[['SALE PRICE']])
test <- manhattan_df[-train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
mean(test[['SALE PRICE']])
sd(test[['SALE PRICE']])
t.test(lmtest_y,lmtest_pred) #linear regression
t.test(test_y, knnmodel$pred) #knn
manhattan_df <- read_excel('rollingsales_manhattan.xls',skip = 4)
library(readxl)
library(dplyr)
library(lattice)
library(ggplot2)
library(FNN)
manhattan_df <- read_excel('rollingsales_manhattan.xls',skip = 4)
View(manhattan_df)
#data cleaning
colnames(manhattan_df)[names(manhattan_df) == "SALE\nPRICE" ] <- "SALE PRICE"
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' != 0 )
manhattan_df <- filter(manhattan_df,manhattan_df$'YEAR BUILT' != 0 )
#Create the Building Age feature to indicate the age of the building at its year sold
manhattan_df$'SALE YEAR' <- as.numeric(format(manhattan_df$'SALE DATE',format = '%Y'))
manhattan_df$'BUILDING AGE' <- manhattan_df$'SALE YEAR' - manhattan_df$'YEAR BUILT'
#Initial observation
names(manhattan_df)
hist(manhattan_df$'YEAR BUILT')
hist(manhattan_df$'BUILDING AGE')
hist(manhattan_df$'SALE PRICE')
hist(manhattan_df$'LAND SQUARE FEET')
hist(manhattan_df$'GROSS SQUARE FEET')
hist(manhattan_df$'COMMERCIAL UNITS')
hist(manhattan_df$'RESIDENTIAL UNITS')
boxplot(manhattan_df$'COMMERCIAL UNITS')
boxplot(manhattan_df$'RESIDENTIAL UNITS')
fivenum(manhattan_df$'SALE PRICE')
boxplot(manhattan_df$'BUILDING AGE')
fivenum(manhattan_df$'LAND SQUARE FEET')
boxplot(manhattan_df$'LAND SQUARE FEET')
#drop all the outliers and zeros
upper_limit = (fivenum(manhattan_df$'SALE PRICE')[4] - fivenum(manhattan_df$'SALE PRICE')[2])*1.5 + fivenum(manhattan_df$'SALE PRICE')[4]
manhattan_df <- filter(manhattan_df,manhattan_df$'SALE PRICE' <= upper_limit)
manhattan_df <- filter(manhattan_df,manhattan_df$'LAND SQUARE FEET' != 0)
#manhattan_df <- filter(manhattan_df,manhattan_df$'COMMERCIAL UNITS' <= (fivenum(manhattan_df$'COMMERCIAL UNITS')[4] - fivenum(manhattan_df$'COMMERCIAL UNITS')[2])*1.5 + fivenum(manhattan_df$'COMMERCIAL UNITS')[4])
#manhattan_df <- filter(manhattan_df,manhattan_df$'RESIDENTIAL UNITS' <= (fivenum(manhattan_df$'RESIDENTIAL UNITS')[4] - fivenum(manhattan_df$'RESIDENTIAL UNITS')[2])*1.5 + fivenum(manhattan_df$'RESIDENTIAL UNITS')[4])
#1:3 Train test Split
set.seed(5)
smp_size <- floor(0.75 * nrow(manhattan_df))
train_ind <- sample(seq_len(nrow(manhattan_df)), size = smp_size)
train <- manhattan_df[train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
test <- manhattan_df[-train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
mean(test[['SALE PRICE']])
sd(test[['SALE PRICE']])
#Standardization
#We need to scale the testing data based on the mean and std of the training data to test our models generalizability
test$'SALE PRICE' <-  ((test$'SALE PRICE') - mean(train$'SALE PRICE'))/mean(train$'SALE PRICE')
test$'LAND SQUARE FEET' <-  ((test$'LAND SQUARE FEET') - mean(train$'LAND SQUARE FEET'))/mean(train$'LAND SQUARE FEET')
test$'BUILDING AGE' <- ((test$'BUILDING AGE') - mean(train$'BUILDING AGE'))/mean(train$'BUILDING AGE')
test$'RESIDENTIAL UNITS' <-  ((test$'RESIDENTIAL UNITS') - mean(train$'RESIDENTIAL UNITS'))/mean(train$'RESIDENTIAL UNITS')
test$'COMMERCIAL UNITS' <- ((test$'COMMERCIAL UNITS') - mean(train$'COMMERCIAL UNITS'))/mean(train$'COMMERCIAL UNITS')
train$'SALE PRICE' <-  scale(train$'SALE PRICE')
train$'LAND SQUARE FEET' <-  scale(train$'LAND SQUARE FEET')
train$'BUILDING AGE' <- scale(train$'BUILDING AGE')
train$'LAND SQUARE FEET' <-  scale(train$'LAND SQUARE FEET')
train$'COMMERCIAL UNITS' <- scale(train$'COMMERCIAL UNITS')
train$'RESIDENTIAL UNITS' <- scale(train$'RESIDENTIAL UNITS')
train_x <- train[,c('LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
train_y <- train[['SALE PRICE']]
test_x <- test[,c('LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
test_y <- test[['SALE PRICE']]
#knn
knnmodel <- knn.reg(train = train_x, y = train_y, test = test_x, k = 51)
plot(test_y, knnmodel$pred , xlab="y", ylab='y_predict')
knn_mae <- mean(abs(test_y - knnmodel$pred))
knn_mae
#Linear Regression
lmtrain <- manhattan_df[train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
lmtest <- manhattan_df[-train_ind, c('SALE PRICE', 'LAND SQUARE FEET','BUILDING AGE','RESIDENTIAL UNITS', 'COMMERCIAL UNITS')]
lmtrain_x <- log(lmtrain[,c('LAND SQUARE FEET')])
lmtrain_x <- mutate(lmtrain_x,manhattan_df[train_ind, c('RESIDENTIAL UNITS', 'COMMERCIAL UNITS','BUILDING AGE')])
lmtrain_y <- log(lmtrain[['SALE PRICE']])
lmtest_x <- log(lmtest[,c('LAND SQUARE FEET')])
lmtest_x <- mutate(lmtest_x,manhattan_df[-train_ind, c('RESIDENTIAL UNITS', 'COMMERCIAL UNITS','BUILDING AGE')])
lmtest_y <- log(lmtest[['SALE PRICE']])
lmtrain <- mutate(lmtrain_x,lmtrain_y)
lmtest <- mutate(lmtest_x,lmtest_y)
colnames(lmtrain) <- c( 'LAND_SQUARE_FEET','RESIDENTIAL_UNITS', 'COMMERCIAL_UNITS','BUILDING_AGE','SALE_PRICE')
colnames(lmtest) <- c( 'LAND_SQUARE_FEET','RESIDENTIAL_UNITS', 'COMMERCIAL_UNITS','BUILDING_AGE','SALE_PRICE')
linreg<-lm(SALE_PRICE ~ 0 + LAND_SQUARE_FEET + RESIDENTIAL_UNITS + COMMERCIAL_UNITS + BUILDING_AGE, data = lmtrain)
summary(linreg)
lmtest_pred <- predict(linreg,newdata =lmtest)
lm_mae <- (mean(abs(lmtest_y - lmtest_pred)))
lm_mae
#two sample test
t.test(lmtest_y,lmtest_pred) #linear regression
t.test(test_y, knnmodel$pred) #knn
qqplot(lmtest_y,lmtest_pred) #linear regression
qqplot(test_y, knnmodel$pred) #knn
